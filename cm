#!/bin/sh
# Jon Ward, 2025.
# A CMake wrapper.  An alternative to this common workflow:
# mkdir build; cd build; cmake ..; make

cm() {
	# Ensure CMake is installed
	if ! command -v cmake >/dev/null 2>&1; then
		printf "Error: CMake is not installed.\n" >&2
		return 1
	fi

	# Find project root
	root=$(git rev-parse --show-toplevel 2>/dev/null || pwd)
	printf "Detected project root: %s\n" "$root"

	# Ensure CMakeLists.txt exists
	if [ ! -f "$root/CMakeLists.txt" ]; then
		printf "Error: No CMakeLists.txt file found.\n" >&2
		return 1
	fi

	# Create and enter build directory
	build_dir="${CMAKE_BUILD_DIR:-$root/build}"
	mkdir -p "$build_dir" || return 1
	cd "$build_dir" || return 1

	# Configure and build
	cmake -S "$root" -B "$build_dir" "$@" || return 1
	cmake --build "$build_dir" || return 1
}

cm "$@"

